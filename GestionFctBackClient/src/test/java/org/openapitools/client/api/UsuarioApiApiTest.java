/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Alumno;
import org.openapitools.client.model.ChangePasswordRequest;
import java.time.LocalDate;
import org.openapitools.client.model.Registro;
import org.openapitools.client.model.RegistroRequest;
import org.openapitools.client.model.Tutor;
import org.openapitools.client.model.Usuario;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsuarioApiApi
 */
@Disabled
public class UsuarioApiApiTest {

    private final UsuarioApiApi api = new UsuarioApiApi();

    /**
     * Borrar registro
     *
     * Borra un registro completo y lo elimina del total de registros de ese alumno
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void borrarRegistroTest() throws ApiException {
        Long id = null;
        api.borrarRegistro(id);
        // TODO: test validations
    }

    /**
     * Cambiar contraseña
     *
     * Cambiar contraseña a partir de la ID del usuario y ambas contraseñas en el body
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cambiarPasswordTest() throws ApiException {
        Long id = null;
        ChangePasswordRequest changePasswordRequest = null;
        Usuario response = api.cambiarPassword(id, changePasswordRequest);
        // TODO: test validations
    }

    /**
     * Consultar alumno
     *
     * Consulta todos los datos de un alumno.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consultarAlumnoTest() throws ApiException {
        Long id = null;
        Alumno response = api.consultarAlumno(id);
        // TODO: test validations
    }

    /**
     * Consultar registros
     *
     * Consulta todos los registros comprendidos entre dos fechas.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consultarRegistrosTest() throws ApiException {
        Long id = null;
        LocalDate desde = null;
        LocalDate hasta = null;
        List<Registro> response = api.consultarRegistros(id, desde, hasta);
        // TODO: test validations
    }

    /**
     * Consultar tutor
     *
     * Consulta todos los datos de un tutor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void consultarTutorTest() throws ApiException {
        Long id = null;
        Tutor response = api.consultarTutor(id);
        // TODO: test validations
    }

    /**
     * Crear registro
     *
     * Crear un registro completo y lo añade al total de registros de ese alumno
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void crearRegistroTest() throws ApiException {
        RegistroRequest registroRequest = null;
        Registro response = api.crearRegistro(registroRequest);
        // TODO: test validations
    }

    /**
     * Realizar login
     *
     * Realiza login en la plataforma a partir del nombre de usuario y su contraseña
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loginTest() throws ApiException {
        String nombreUsuario = null;
        String contraseña = null;
        Usuario response = api.login(nombreUsuario, contraseña);
        // TODO: test validations
    }

}
