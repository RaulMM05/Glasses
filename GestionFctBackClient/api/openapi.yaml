openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- description: Generated server url
  url: http://localhost:8080
paths:
  /usuario/{id}:
    get:
      description: Consulta todos los registros comprendidos entre dos fechas.
      operationId: consultarRegistros
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: desde
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: hasta
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Registro'
                type: array
          description: OK
      security:
      - Authorization: []
      summary: Consultar registros
      tags:
      - usuario-api
      x-accepts:
      - '*/*'
    put:
      description: Cambiar contraseña a partir de la ID del usuario y ambas contraseñas
        en el body
      operationId: cambiarPassword
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usuario'
          description: OK
      security:
      - Authorization: []
      summary: Cambiar contraseña
      tags:
      - usuario-api
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /usuario:
    delete:
      description: Borra un registro completo y lo elimina del total de registros
        de ese alumno
      operationId: borrarRegistro
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          description: OK
      security:
      - Authorization: []
      summary: Borrar registro
      tags:
      - usuario-api
      x-accepts:
      - application/json
    get:
      description: Realiza login en la plataforma a partir del nombre de usuario y
        su contraseña
      operationId: login
      parameters:
      - explode: true
        in: query
        name: nombreUsuario
        required: true
        schema:
          maxLength: 50
          minLength: 0
          type: string
        style: form
      - explode: true
        in: query
        name: contraseña
        required: true
        schema:
          maxLength: 100
          minLength: 0
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usuario'
          description: OK
      security:
      - Authorization: []
      summary: Realizar login
      tags:
      - usuario-api
      x-accepts:
      - '*/*'
    post:
      description: Crear un registro completo y lo añade al total de registros de
        ese alumno
      operationId: crearRegistro
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistroRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Registro'
          description: OK
      security:
      - Authorization: []
      summary: Crear registro
      tags:
      - usuario-api
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /usuario/tutor/{id}:
    get:
      description: Consulta todos los datos de un tutor.
      operationId: consultarTutor
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Tutor'
          description: OK
      security:
      - Authorization: []
      summary: Consultar tutor
      tags:
      - usuario-api
      x-accepts:
      - '*/*'
  /usuario/fecha:
    get:
      description: Consulta la ID de la fecha que se recibe por parámetros.
      operationId: consultarFecha
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Fecha'
                type: array
          description: OK
      security:
      - Authorization: []
      summary: Consultar fecha
      tags:
      - usuario-api
      x-accepts:
      - '*/*'
  /usuario/alumno/{id}:
    get:
      description: Consulta todos los datos de un alumno.
      operationId: consultarAlumno
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Alumno'
          description: OK
      security:
      - Authorization: []
      summary: Consultar alumno
      tags:
      - usuario-api
      x-accepts:
      - '*/*'
components:
  schemas:
    ChangePasswordRequest:
      example:
        oldPassword: oldPassword
        newPassword: newPassword
      properties:
        oldPassword:
          maxLength: 2147483647
          minLength: 8
          type: string
        newPassword:
          maxLength: 2147483647
          minLength: 8
          type: string
      required:
      - newPassword
      - oldPassword
    Usuario:
      example:
        tipo: tipo
        idPerfil: 6
        id: 0
        nombreUsuario: nombreUsuario
        contraseña: contraseña
        activo: true
      properties:
        id:
          format: int64
          type: integer
        nombreUsuario:
          type: string
        contraseña:
          type: string
        tipo:
          type: string
        idPerfil:
          format: int64
          type: integer
        activo:
          type: boolean
      required:
      - activo
      - contraseña
      - nombreUsuario
      - tipo
    Alumno:
      example:
        ciclo: ciclo
        id: 1
        nombreCompleto: nombreCompleto
        empresa:
          tlfTutorLaboral: 10
          emailTutorLaboral: emailTutorLaboral
          nombreTutorLaboral: nombreTutorLaboral
          nombreComercial: nombreComercial
          id: 2
        evaluación: evaluación
        año: 5
        tutor:
          id: 5
          nombreCompleto: nombreCompleto
          activo: true
      properties:
        id:
          format: int64
          type: integer
        nombreCompleto:
          maxLength: 100
          minLength: 0
          type: string
        ciclo:
          type: string
        evaluación:
          type: string
        año:
          format: int32
          type: integer
        tutor:
          $ref: '#/components/schemas/Tutor'
        empresa:
          $ref: '#/components/schemas/Empresa'
      required:
      - nombreCompleto
    Empresa:
      example:
        tlfTutorLaboral: 10
        emailTutorLaboral: emailTutorLaboral
        nombreTutorLaboral: nombreTutorLaboral
        nombreComercial: nombreComercial
        id: 2
      properties:
        id:
          format: int64
          type: integer
        nombreComercial:
          type: string
        nombreTutorLaboral:
          type: string
        emailTutorLaboral:
          type: string
        tlfTutorLaboral:
          format: int32
          maximum: 15
          minimum: 0
          type: integer
      required:
      - emailTutorLaboral
      - nombreComercial
      - nombreTutorLaboral
      - tlfTutorLaboral
    Fecha:
      example:
        fecha: 2000-01-23
        evaluacion: evaluacion
        id: 9
        añoCurso: 4
      properties:
        id:
          format: int64
          type: integer
        fecha:
          format: date
          type: string
        añoCurso:
          format: int32
          maximum: 4
          minimum: 4
          type: integer
        evaluacion:
          type: string
      required:
      - añoCurso
      - evaluacion
      - fecha
    RegistroRequest:
      example:
        horas: 0.8008281904610115
        descripcion: descripcion
        fecha:
          fecha: 2000-01-23
          evaluacion: evaluacion
          id: 9
          añoCurso: 4
        alumno:
          ciclo: ciclo
          id: 1
          nombreCompleto: nombreCompleto
          empresa:
            tlfTutorLaboral: 10
            emailTutorLaboral: emailTutorLaboral
            nombreTutorLaboral: nombreTutorLaboral
            nombreComercial: nombreComercial
            id: 2
          evaluación: evaluación
          año: 5
          tutor:
            id: 5
            nombreCompleto: nombreCompleto
            activo: true
      properties:
        horas:
          type: number
        descripcion:
          type: string
        alumno:
          $ref: '#/components/schemas/Alumno'
        fecha:
          $ref: '#/components/schemas/Fecha'
      required:
      - descripcion
      - horas
    Tutor:
      example:
        id: 5
        nombreCompleto: nombreCompleto
        activo: true
      properties:
        id:
          format: int64
          type: integer
        nombreCompleto:
          maxLength: 100
          minLength: 0
          type: string
        activo:
          type: boolean
      required:
      - activo
      - nombreCompleto
    Registro:
      example:
        horas: 6.027456183070403
        descripcion: descripcion
        fecha:
          fecha: 2000-01-23
          evaluacion: evaluacion
          id: 9
          añoCurso: 4
        alumno:
          ciclo: ciclo
          id: 1
          nombreCompleto: nombreCompleto
          empresa:
            tlfTutorLaboral: 10
            emailTutorLaboral: emailTutorLaboral
            nombreTutorLaboral: nombreTutorLaboral
            nombreComercial: nombreComercial
            id: 2
          evaluación: evaluación
          año: 5
          tutor:
            id: 5
            nombreCompleto: nombreCompleto
            activo: true
        id: 0
      properties:
        id:
          format: int64
          type: integer
        horas:
          type: number
        descripcion:
          type: string
        alumno:
          $ref: '#/components/schemas/Alumno'
        fecha:
          $ref: '#/components/schemas/Fecha'
      required:
      - descripcion
      - horas
  securitySchemes:
    Authorization:
      in: header
      name: API-KEY
      type: apiKey

